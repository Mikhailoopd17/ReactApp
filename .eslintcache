[{"C:\\Users\\front-react\\src\\index.js":"1","C:\\Users\\front-react\\src\\App.js":"2","C:\\Users\\front-react\\src\\reportWebVitals.js":"3","C:\\Users\\front-react\\src\\messages\\list\\messageComponent.js":"4","C:\\Users\\front-react\\src\\messages\\list\\Message.js":"5","C:\\Users\\front-react\\src\\messages\\inputArea\\InputAreaComponent.js":"6","C:\\Users\\front-react\\src\\messages\\senders\\SenderComponent.js":"7"},{"size":715,"mtime":1609563286409,"results":"8","hashOfConfig":"9"},{"size":702,"mtime":1609752534650,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":802,"mtime":1609752534644,"results":"12","hashOfConfig":"9"},{"size":2021,"mtime":1609752621028,"results":"13","hashOfConfig":"9"},{"size":1641,"mtime":1609748693452,"results":"14","hashOfConfig":"9"},{"size":178,"mtime":1609749918011,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1pu1txa",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\front-react\\src\\index.js",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MessageList from \"./messages/list/messageComponent\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <MessageList />\n//     </React.StrictMode>,\n//     document.getElementById('message-list')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["35","36"],"C:\\Users\\front-react\\src\\App.js",[],"C:\\Users\\front-react\\src\\reportWebVitals.js",[],"C:\\Users\\front-react\\src\\messages\\list\\messageComponent.js",["37"],"import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport InputAreaComponent from \"../inputArea/InputAreaComponent\";\r\n\r\nexport default function MessageComponent(props) {\r\n    const style = {\r\n        div: {\r\n\r\n            marginRight: 20\r\n        },\r\n        head: {\r\n            fontWeight: 700,\r\n            color: '#0f1601',\r\n            textAlign: 'center'\r\n        }\r\n    };\r\n    return (\r\n        <div style={style.div}>\r\n            <p style={style.head}>Сообщения чата</p>\r\n            <ul>\r\n                {props.messages.map(message => {\r\n                    return (\r\n                        <Message message={message} key={message.id}/>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <InputAreaComponent/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\front-react\\src\\messages\\list\\Message.js",[],"C:\\Users\\front-react\\src\\messages\\inputArea\\InputAreaComponent.js",["38"],"import React from 'react';\r\n\r\n\r\nexport default function InputAreaComponent () {\r\n    const URL = '/api/messages';\r\n    const newMessage = {\r\n        text: null,\r\n        sender_id: 1\r\n    };\r\n    const style = {\r\n        wrapper: {\r\n            display: 'flex'\r\n        },\r\n        input: {\r\n            //text\r\n            color: '#000000',\r\n            fontSize: 18,\r\n\r\n\r\n            marginLeft: 40,\r\n            marginRight: 20,\r\n\r\n            height: 40,\r\n            background: '#feffda',\r\n            border: 0,\r\n            borderRadius: 2,\r\n            display: 'flex'\r\n            // minWidth: '100%'\r\n        },\r\n        button: {\r\n            height: 40,\r\n            width: 40,\r\n        }\r\n    };\r\n\r\n    function submit(data) {\r\n\r\n        fetch(URL,{\r\n            method: 'POST',\r\n            body: data,\r\n            headers: {\r\n                // 'Authorization': 'bearer ${token}',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(function(response) {\r\n                return response.json()\r\n            }).then(function(body) {\r\n            console.log(body);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={style.wrapper}>\r\n            <form style={style.wrapper}>\r\n                <div>\r\n                    <input style={style.input} value={newMessage.text}/>\r\n                </div>\r\n                <div style={style.button}>\r\n                    <button style={style.button}><img src=\"/src/submit.png\" alt=\"my image\" style={style.button} onChange={submit(newMessage)}/></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\front-react\\src\\messages\\senders\\SenderComponent.js",[],{"ruleId":"39","severity":1,"message":"40","line":6,"column":8,"nodeType":"41","messageId":"42","endLine":6,"endColumn":19},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"47","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":23},{"ruleId":"48","severity":1,"message":"49","line":63,"column":50,"nodeType":"50","endLine":63,"endColumn":144},"no-unused-vars","'MessageList' is defined but never used.","Identifier","unusedVar","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"'SenderComponent' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]