[{"C:\\Users\\front-react\\src\\index.js":"1","C:\\Users\\front-react\\src\\App.js":"2","C:\\Users\\front-react\\src\\reportWebVitals.js":"3","C:\\Users\\front-react\\src\\messages\\list\\messageComponent.js":"4","C:\\Users\\front-react\\src\\messages\\list\\Message.js":"5","C:\\Users\\front-react\\src\\messages\\inputArea\\InputAreaComponent.js":"6","C:\\Users\\front-react\\src\\messages\\senders\\SenderComponent.js":"7"},{"size":715,"mtime":1609563286409,"results":"8","hashOfConfig":"9"},{"size":1085,"mtime":1610727421989,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1035,"mtime":1610727848243,"results":"12","hashOfConfig":"9"},{"size":2128,"mtime":1610727806783,"results":"13","hashOfConfig":"9"},{"size":1214,"mtime":1609788029597,"results":"14","hashOfConfig":"9"},{"size":133,"mtime":1609788836929,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1pu1txa",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\front-react\\src\\index.js",["33"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MessageList from \"./messages/list/messageComponent\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <MessageList />\n//     </React.StrictMode>,\n//     document.getElementById('message-list')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["34","35"],"C:\\Users\\front-react\\src\\App.js",["36","37"],"C:\\Users\\front-react\\src\\reportWebVitals.js",[],"C:\\Users\\front-react\\src\\messages\\list\\messageComponent.js",[],"C:\\Users\\front-react\\src\\messages\\list\\Message.js",["38"],"C:\\Users\\front-react\\src\\messages\\inputArea\\InputAreaComponent.js",["39","40","41"],"import React from 'react';\r\n\r\n\r\nexport default function InputAreaComponent () {\r\n    const URL = '/api/messages';\r\n    const newMessage = {\r\n        text: null,\r\n        sender_id: 1\r\n    };\r\n    const style = {\r\n        wrapper: {\r\n            display: 'flex'\r\n        },\r\n        input: {\r\n            //text\r\n            color: '#000000',\r\n            fontSize: 18,\r\n\r\n\r\n            marginLeft: 40,\r\n            marginRight: 20,\r\n\r\n            height: 40,\r\n            background: '#feffda',\r\n            border: 0,\r\n            borderRadius: 2,\r\n            display: 'flex'\r\n            // minWidth: '100%'\r\n        },\r\n        button: {\r\n            height: 40,\r\n            width: 40,\r\n        }\r\n    };\r\n\r\n    function submit(data) {\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={style.wrapper}>\r\n            <form style={style.wrapper}>\r\n                <div>\r\n                    <input style={style.input} value={newMessage.text}/>\r\n                </div>\r\n                <div style={style.button}>\r\n                    <button style={style.button}><img src=\"/src/submit.png\" alt=\"my image\" style={style.button}/></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\front-react\\src\\messages\\senders\\SenderComponent.js",[],{"ruleId":"42","severity":1,"message":"43","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":19},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"42","severity":1,"message":"50","line":11,"column":11,"nodeType":"44","messageId":"45","endLine":11,"endColumn":16},{"ruleId":"51","severity":1,"message":"52","line":30,"column":8,"nodeType":"53","endLine":30,"endColumn":10,"suggestions":"54"},{"ruleId":"42","severity":1,"message":"55","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":23},{"ruleId":"42","severity":1,"message":"56","line":5,"column":11,"nodeType":"44","messageId":"45","endLine":5,"endColumn":14},{"ruleId":"42","severity":1,"message":"57","line":36,"column":14,"nodeType":"44","messageId":"45","endLine":36,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":50,"column":50,"nodeType":"60","endLine":50,"endColumn":114},"no-unused-vars","'MessageList' is defined but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'style' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'body'. Either include it or remove the dependency array.","ArrayExpression",["63"],"'SenderComponent' is defined but never used.","'URL' is assigned a value but never used.","'submit' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [body]",{"range":"66","text":"67"},[783,785],"[body]"]