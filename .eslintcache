[{"C:\\Users\\front-react\\src\\index.js":"1","C:\\Users\\front-react\\src\\App.js":"2","C:\\Users\\front-react\\src\\reportWebVitals.js":"3","C:\\Users\\front-react\\src\\messages\\list\\messageComponent.js":"4","C:\\Users\\front-react\\src\\messages\\list\\Message.js":"5","C:\\Users\\front-react\\src\\messages\\inputArea\\InputAreaComponent.js":"6","C:\\Users\\front-react\\src\\messages\\senders\\SenderComponent.js":"7","C:\\Users\\front-react\\src\\users\\UserComponent.js":"8","C:\\Users\\front-react\\src\\users\\UserMenuComponent.js":"9"},{"size":691,"mtime":1613016248537,"results":"10","hashOfConfig":"11"},{"size":1287,"mtime":1612985302932,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2562,"mtime":1612988284155,"results":"14","hashOfConfig":"11"},{"size":2122,"mtime":1610816963690,"results":"15","hashOfConfig":"11"},{"size":1483,"mtime":1612986076262,"results":"16","hashOfConfig":"11"},{"size":149,"mtime":1610898245818,"results":"17","hashOfConfig":"11"},{"size":284,"mtime":1613061084315,"results":"18","hashOfConfig":"11"},{"size":2330,"mtime":1613060930434,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1pu1txa",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\front-react\\src\\index.js",[],["43","44"],"C:\\Users\\front-react\\src\\App.js",["45","46","47"],"import './App.css';\nimport React, { useEffect } from \"react\";\nimport MessageComponent from \"./messages/list/messageComponent\";\n\nfunction App() {\n    const [ messages, setMessage ] = React.useState([]);\n    const url = \"/api/messages/list\";\n    const body = {\n        start: null,\n        page: null,\n        params: {\n            ids: [],\n            start: null,\n            end: null,\n            searchText: null,\n            senderIds: null,\n            deleted: false\n        }\n    };\n    const style = {\n        header: {\n            width: '100%',\n            top: 0,\n            right: 0,\n            background: '#1b3a7e',\n            height: '200px',\n            display: 'block'\n        }\n    };\n\n    useEffect(() => {\n       fetch(url, {\n           method: 'POST',\n           body: JSON.stringify(body),\n           headers: {'Content-Type': 'application/json'}\n       })\n           .then(response => response.json())\n           .then(data => setMessage(data.list))\n    }, []);\n\n\n    // function setMessage() {\n    //     setMessages(\n    //         messages.map(message => {\n    //             return message;\n    //         })\n    //     )\n    // }\n\n    return (\n        <div>\n            <MessageComponent messages={messages}/>\n        </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\front-react\\src\\reportWebVitals.js",[],"C:\\Users\\front-react\\src\\messages\\list\\messageComponent.js",["48","49"],"import React, {useEffect} from \"react\";\r\nimport Message from \"./Message\";\r\nimport InputAreaComponent from \"../inputArea/InputAreaComponent\";\r\nconst urlAdd = \"/api/messages\";\r\n\r\nexport default function MessageComponent(props) {\r\n    let text = '';\r\n    const style = {\r\n        div: {\r\n            overflowY: 'scroll',\r\n            margin: 5,\r\n            height: '73vh',\r\n            background: '#282c34'\r\n        },\r\n        head: {\r\n            fontWeight: 700,\r\n            color: '#ffffff',\r\n            textAlign: 'center'\r\n        },\r\n        input: {\r\n            paddingTop: 10,\r\n            down: 0,\r\n            display: 'block'\r\n        },\r\n        wrapper: {\r\n            display: 'flex'\r\n        },\r\n        input2: {\r\n            //text\r\n            color: '#000000',\r\n            fontSize: 18,\r\n\r\n\r\n            marginLeft: 40,\r\n            marginRight: 20,\r\n\r\n            height: 40,\r\n            background: '#feffda',\r\n            border: 0,\r\n            borderRadius: 2,\r\n            display: 'flex'\r\n            // minWidth: '100%'\r\n        },\r\n        button: {\r\n            height: 40,\r\n            width: 40,\r\n        }\r\n    };\r\n\r\n    function Submit() {\r\n        useEffect(() => {\r\n            fetch(urlAdd, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    text: text,\r\n                    sender_id: 1\r\n                }),\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }, []);\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <p style={style.head}>Сообщения чата</p>\r\n            <div style={style.div}>\r\n                {props.messages.map(message => {\r\n                    return (\r\n                        <Message message={message} key={message.id}/>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div style={style.input}>\r\n                <div style={style.wrapper}>\r\n                    <form onSubmit={Submit()} style={style.wrapper}>\r\n                        <div>\r\n                            <input  style={style.input2} src={text}/>\r\n                        </div>\r\n                        <div style={style.button}>\r\n                            <button style={style.button}><img src=\"/src/submit.png\" alt=\"my image\" style={style.button}/></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n","C:\\Users\\front-react\\src\\messages\\list\\Message.js",["50"],"import React from 'react'\r\nimport * as moment from \"moment\";\r\nimport 'moment/locale/ru';\r\nimport SenderComponent from \"../senders/SenderComponent\";\r\n\r\nexport default function Message({ message }) {\r\n    const style = {\r\n        block: {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        sender: {\r\n            display: 'table-cell',\r\n            verticalAlign: 'middle',\r\n            textAlign: 'center',\r\n            background: message.sender.color,\r\n            borderRadius: 25,\r\n            width: 50,\r\n            height: 50,\r\n            // marginRight: 15\r\n        },\r\n        text: {\r\n            color: '#000000',\r\n            fontSize: 18\r\n        },\r\n        div: {\r\n            minWidth: 200,\r\n            maxWidth: 400,\r\n            minHeight: 50,\r\n            maxHeight: 200,\r\n            margin: 8,\r\n            paddingRight: 15,\r\n            paddingLeft: 15,\r\n            paddingTop: 8,\r\n            background: '#4c6e5a',\r\n            borderRadius: 15\r\n        },\r\n        date: {\r\n            display: 'flex',\r\n            color: '#23284b',\r\n            fontSize: 14\r\n        },\r\n        dateCreate: {\r\n            width: '50%',\r\n            textAlign: 'right',\r\n            margin: 5\r\n        },\r\n        dateUpdate: {\r\n            width: '50%',\r\n            textAlign: 'left',\r\n            margin: 5\r\n        }\r\n    };\r\n    function parseDate(date) {\r\n        if (date) {\r\n            moment.locale('ru');\r\n            return moment(date).format('LLL');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={style.block} >\r\n            <div style={style.sender}>\r\n                <label>{message.sender.logo}</label>\r\n            </div>\r\n            <div style={style.div}>\r\n                <div style={style.text}>{message.text}</div>\r\n                <div style={style.date}>\r\n                    <div style={style.dateUpdate}>{message.updatedAt ? 'изм. ' + parseDate(message.updatedAt) : ''}</div>\r\n                    <div style={style.dateCreate}>{parseDate(message.createdAt)}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\front-react\\src\\messages\\inputArea\\InputAreaComponent.js",["51"],"import React, {useEffect} from 'react';\r\n\r\n\r\nexport default function InputAreaComponent () {\r\n\r\n    const style = {\r\n        wrapper: {\r\n            display: 'flex'\r\n        },\r\n        input: {\r\n            //text\r\n            color: '#000000',\r\n            fontSize: 18,\r\n\r\n\r\n            marginLeft: 40,\r\n            marginRight: 20,\r\n\r\n            height: 40,\r\n            background: '#feffda',\r\n            border: 0,\r\n            borderRadius: 2,\r\n            display: 'flex'\r\n            // minWidth: '100%'\r\n        },\r\n        button: {\r\n            height: 40,\r\n            width: 40,\r\n        }\r\n    };\r\n\r\n    function Submit(data) {\r\n\r\n        useEffect(() => {\r\n            fetch(urlAdd, {\r\n                method: 'POST',\r\n                body: JSON.stringify(newMessage),\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }, []);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={style.wrapper}>\r\n            <form action={Submit(newMessage)} style={style.wrapper}>\r\n                <div>\r\n                    <input style={style.input} src={newMessage.text} />\r\n                </div>\r\n                <div style={style.button}>\r\n                    <button style={style.button}><img src=\"/src/submit.png\" alt=\"my image\" style={style.button}/></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\front-react\\src\\messages\\senders\\SenderComponent.js",[],"C:\\Users\\front-react\\src\\users\\UserComponent.js",[],"C:\\Users\\front-react\\src\\users\\UserMenuComponent.js",["52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":8,"column":11,"nodeType":"59","messageId":"60","endLine":8,"endColumn":17},{"ruleId":"57","severity":1,"message":"61","line":21,"column":11,"nodeType":"59","messageId":"60","endLine":21,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":40,"column":8,"nodeType":"64","endLine":40,"endColumn":10,"suggestions":"65"},{"ruleId":"57","severity":1,"message":"66","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":83,"column":58,"nodeType":"69","endLine":83,"endColumn":122},{"ruleId":"57","severity":1,"message":"70","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":59,"column":50,"nodeType":"69","endLine":59,"endColumn":114},{"ruleId":"57","severity":1,"message":"71","line":57,"column":14,"nodeType":"59","messageId":"60","endLine":57,"endColumn":24},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'urlAdd' is assigned a value but never used.","Identifier","unusedVar","'style' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'body'. Either include it or remove the dependency array.","ArrayExpression",["74"],"'InputAreaComponent' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'SenderComponent' is defined but never used.","'myFunction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [body]",{"range":"77","text":"78"},[1020,1022],"[body]"]